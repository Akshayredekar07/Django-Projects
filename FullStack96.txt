

Model Releted views Classes to perform CRUD Operations:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ListView ---->to select all records 

Detailview -->to get detailsof particular record
CreateView --> to insert a record
DeleteView---> to delete record
UpdateView --> to update records

1. ListView
***********

we can use ListView class to list out all records from database table(model).
It is alternative to: ModelClassName.objects.all()


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    #default template files name: modelname_list.html 
    #default context object name: modelname_list 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Project: CBVProject2

from django.shortcuts import render
from testapp.models import Book
from django.views.generic import ListView
# Create your views here.


# def books_view(request):
#     books_list=Book.objects.all()
#     return render(request, 'testapp/book.html', {'books_list': books_list})

# >> This are not required in CBV it is hidden

class BookListView(ListView):
    model=Book
    #default template files: book_list.html 
    #default context object: book_list 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

model.py

from django.db import models

# Create your models here.
class Book(models.Model):
    title=models.CharField(max_length=300)
    author=models.CharField(max_length=30)
    pages=models.IntegerField()
    price=models.FloatField()


    
    
admin.py

from django.contrib import admin
from testapp.models import Book

# Register your models here.
class BookAdmin(admin.ModelAdmin):
    list_display=['title','author','pages', 'price']

admin.site.register(Book, BookAdmin)    

book_list.html
~~~~~~~~~~~~~~~

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<body>
    <h1>All Books Information</h1>
    {% for book in book_list %}
        <ul>
            <li>Title: <b>{{book.title}}</b></li>
            <li>Author: <b>{{book.author}}</b></li>
            <li>Pages: <b>{{book.pages}}</b></li>
            <li>Price: <b>{{book.price}}</b></li>
        </ul>
    {% endfor %}
</body>
</html>


How to configure our own template file and context name:
********************************************************


class BookListView(ListView):
    model=Book
    #default template files: book_list.html 
    template_name='testapp/book.html'
    #default context object: book_list 
    context_object_name="books"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~book.html 
    {% for book in books %}

~~~~~~~~~~~~~~~~~
Detailview

